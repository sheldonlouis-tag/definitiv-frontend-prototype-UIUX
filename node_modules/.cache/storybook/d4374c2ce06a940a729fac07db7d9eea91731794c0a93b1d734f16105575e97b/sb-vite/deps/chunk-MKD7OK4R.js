import {
  get,
  getContext,
  hasContext,
  proxy,
  set,
  setContext,
  state,
  tag,
  tag_proxy
} from "./chunk-ITKELFPS.js";

// node_modules/@storybook/csf/dist/index.mjs
var C = Object.create;
var u = Object.defineProperty;
var B = Object.getOwnPropertyDescriptor;
var F = Object.getOwnPropertyNames;
var h = Object.getPrototypeOf;
var w = Object.prototype.hasOwnProperty;
var E = (r, e) => () => (e || r((e = { exports: {} }).exports, e), e.exports);
var v = (r, e, n, t) => {
  if (e && typeof e == "object" || typeof e == "function") for (let a of F(e)) !w.call(r, a) && a !== n && u(r, a, { get: () => e[a], enumerable: !(t = B(e, a)) || t.enumerable });
  return r;
};
var I = (r, e, n) => (n = r != null ? C(h(r)) : {}, v(e || !r || !r.__esModule ? u(n, "default", { value: r, enumerable: true }) : n, r));
var x = E((T) => {
  Object.defineProperty(T, "__esModule", { value: true }), T.isEqual = /* @__PURE__ */ function() {
    var r = Object.prototype.toString, e = Object.getPrototypeOf, n = Object.getOwnPropertySymbols ? function(t) {
      return Object.keys(t).concat(Object.getOwnPropertySymbols(t));
    } : Object.keys;
    return function(t, a) {
      return function i(o, s, p) {
        var g, y, d, c = r.call(o), b = r.call(s);
        if (o === s) return true;
        if (o == null || s == null) return false;
        if (p.indexOf(o) > -1 && p.indexOf(s) > -1) return true;
        if (p.push(o, s), c != b || (g = n(o), y = n(s), g.length != y.length || g.some(function(A) {
          return !i(o[A], s[A], p);
        }))) return false;
        switch (c.slice(8, -1)) {
          case "Symbol":
            return o.valueOf() == s.valueOf();
          case "Date":
          case "Number":
            return +o == +s || +o != +o && +s != +s;
          case "RegExp":
          case "Function":
          case "String":
          case "Boolean":
            return "" + o == "" + s;
          case "Set":
          case "Map":
            g = o.entries(), y = s.entries();
            do
              if (!i((d = g.next()).value, y.next().value, p)) return false;
            while (!d.done);
            return true;
          case "ArrayBuffer":
            o = new Uint8Array(o), s = new Uint8Array(s);
          case "DataView":
            o = new Uint8Array(o.buffer), s = new Uint8Array(s.buffer);
          case "Float32Array":
          case "Float64Array":
          case "Int8Array":
          case "Int16Array":
          case "Int32Array":
          case "Uint8Array":
          case "Uint16Array":
          case "Uint32Array":
          case "Uint8ClampedArray":
          case "Arguments":
          case "Array":
            if (o.length != s.length) return false;
            for (d = 0; d < o.length; d++) if ((d in o || d in s) && (d in o != d in s || !i(o[d], s[d], p))) return false;
            return true;
          case "Object":
            return i(e(o), e(s), p);
          default:
            return false;
        }
      }(t, a, []);
    };
  }();
});
var l = I(x());
var O = (r) => r.toLowerCase().replace(/[ ’–—―′¿'`~!@#$%^&*()_|+\-=?;:'",.<>\{\}\[\]\\\/]/gi, "-").replace(/-+/g, "-").replace(/^-+/, "").replace(/-+$/, "");

// node_modules/@storybook/addon-svelte-csf/dist/utils/identifier-utils.js
var storyIdToExportName = (storyId) => storyId.split("-").map((part) => part.charAt(0).toUpperCase() + part.slice(1)).join("");
var storyNameToId = (name) => (
  // add a space before all caps and use utility from @storybook/csf to sanitize the resulting string
  O(name.replace(/([A-Z])/g, " $1").trim())
);
var storyNameToExportName = (name) => storyIdToExportName(storyNameToId(name));

// node_modules/@storybook/addon-svelte-csf/dist/runtime/contexts/extractor.svelte.js
var CONTEXT_KEY = "storybook-stories-extractor-context";
function buildContext(storyCmpProps) {
  let isExtracting = tag_proxy(proxy(storyCmpProps.isExtracting), "isExtracting");
  let register = tag_proxy(proxy(storyCmpProps.register), "register");
  return {
    get isExtracting() {
      return isExtracting;
    },
    get register() {
      return register;
    }
  };
}
function createStoriesExtractorContext(repository) {
  const { stories } = repository;
  const ctx = buildContext({
    isExtracting: true,
    register: (s) => {
      stories.set(s.exportName ?? storyNameToExportName(s.name), s);
    }
  });
  setContext(CONTEXT_KEY, ctx);
}
function useStoriesExtractor() {
  if (!hasContext(CONTEXT_KEY)) {
    setContext(CONTEXT_KEY, buildContext({ isExtracting: false, register: () => {
    } }));
  }
  return getContext(CONTEXT_KEY);
}

// node_modules/@storybook/addon-svelte-csf/dist/runtime/contexts/renderer.svelte.js
var CONTEXT_KEY2 = "storybook-story-renderer-context";
function buildContext2(props) {
  let currentStoryExportName = tag(state(proxy(props.currentStoryExportName)), "currentStoryExportName");
  let args = tag(state(proxy(props.args)), "args");
  let storyContext = tag(state(proxy(props.storyContext)), "storyContext");
  let metaRenderSnippet = tag(state(proxy(props.metaRenderSnippet)), "metaRenderSnippet");
  function set2(props2) {
    set(currentStoryExportName, props2.currentStoryExportName, true);
    set(args, props2.args, true);
    set(storyContext, props2.storyContext, true);
    set(metaRenderSnippet, props2.metaRenderSnippet, true);
  }
  return {
    get args() {
      return get(args);
    },
    get storyContext() {
      return get(storyContext);
    },
    get currentStoryExportName() {
      return get(currentStoryExportName);
    },
    get metaRenderSnippet() {
      return get(metaRenderSnippet);
    },
    set: set2
  };
}
function createStoryRendererContext() {
  const ctx = buildContext2({
    currentStoryExportName: void 0,
    args: {},
    // @ts-expect-error FIXME: I don't know how to satisfy this one
    storyContext: {}
  });
  setContext(CONTEXT_KEY2, ctx);
}
function useStoryRenderer() {
  if (!hasContext(CONTEXT_KEY2)) {
    createStoryRendererContext();
  }
  return getContext(CONTEXT_KEY2);
}

export {
  storyNameToExportName,
  createStoriesExtractorContext,
  useStoriesExtractor,
  useStoryRenderer
};
//# sourceMappingURL=chunk-MKD7OK4R.js.map
