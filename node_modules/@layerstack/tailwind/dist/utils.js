import clsx from 'clsx';
import { extendTailwindMerge } from 'tailwind-merge';
import { range } from 'd3-array';
import { mergeWith } from 'lodash-es';
/**
 * Wrapper around `tailwind-merge` and `clsx`
 */
const twMerge = extendTailwindMerge({
    extend: {
        classGroups: {
            shadow: [
                'shadow-border-l',
                'shadow-border-r',
                'shadow-border-t',
                'shadow-border-b',
                'elevation-none',
                ...range(1, 25).map((x) => `elevation-${x}`),
            ],
        },
    },
});
export const cls = (...inputs) => twMerge(clsx(...inputs));
export const clsMerge = (...inputs) => mergeWith({}, ...inputs.filter(Boolean), (a, b) => twMerge(a, b));
export const normalizeClasses = (classes) => {
    return classes && typeof classes === 'object' ? classes : { root: classes };
};
