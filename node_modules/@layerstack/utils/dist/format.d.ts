import type { FormatNumberOptions, FormatNumberStyle } from './number.js';
import { type LocaleSettings } from './locale.js';
import { PeriodType, type FormatDateOptions, DayOfWeek, type PeriodTypeCode } from './date_types.js';
export type CustomFormatter = (value: any) => string;
export type FormatType = FormatNumberStyle | PeriodType | PeriodTypeCode | CustomFormatter;
export type FormatConfig = {
    type: FormatNumberStyle;
    options?: FormatNumberOptions;
} | {
    type: PeriodType | PeriodTypeCode;
    options?: FormatDateOptions;
};
export type { FormatNumberStyle, PeriodType, PeriodTypeCode };
/**
 * Generic format which can handle Dates, Numbers, or custom format function
 */
export declare function format(value: null | undefined, format?: FormatType): string;
export declare function format(value: null | undefined, config: {
    type: FormatType;
}): string;
export declare function format(value: number, format?: FormatNumberStyle | CustomFormatter, options?: FormatNumberOptions): string;
export declare function format(value: number, config: {
    type: FormatNumberStyle | CustomFormatter;
    options?: FormatNumberOptions;
}): string;
export declare function format(value: string | Date, format?: PeriodType | PeriodTypeCode | CustomFormatter, options?: FormatDateOptions): string;
export declare function format(value: string | Date, config: {
    type: PeriodType | PeriodTypeCode | CustomFormatter;
    options?: FormatDateOptions;
}): string;
export declare function formatWithLocale(settings: LocaleSettings, value: null | undefined, format?: FormatType, options?: FormatNumberOptions | FormatDateOptions): string;
export declare function formatWithLocale(settings: LocaleSettings, value: null | undefined, config: FormatConfig): string;
export declare function formatWithLocale(settings: LocaleSettings, value: number, format?: FormatNumberStyle | CustomFormatter, options?: FormatNumberOptions): string;
export declare function formatWithLocale(settings: LocaleSettings, value: number, config: FormatConfig): string;
export declare function formatWithLocale(settings: LocaleSettings, value: string | Date, format?: PeriodType | PeriodTypeCode | CustomFormatter, options?: FormatDateOptions): string;
export declare function formatWithLocale(settings: LocaleSettings, value: string | Date, config: FormatConfig): string;
export type FormatFunction = ((value: number | null | undefined, style: FormatNumberStyle, options?: FormatNumberOptions) => string) & ((value: Date | string | null | undefined, period: PeriodType | PeriodTypeCode, options?: FormatDateOptions) => string);
export interface FormatFunctionProperties {
    getPeriodTypeName: (period: PeriodType) => string;
    getDayOfWeekName: (day: DayOfWeek) => string;
    settings: LocaleSettings;
}
export type FormatFunctions = FormatFunction & FormatFunctionProperties;
export declare function buildFormatters(settings: LocaleSettings): FormatFunctions;
//# sourceMappingURL=format.d.ts.map