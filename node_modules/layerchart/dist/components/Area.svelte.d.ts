import { type Area as D3Area } from 'd3-shape';
import type { SVGAttributes } from 'svelte/elements';
import type { CommonStyleProps, Without } from '../utils/types.js';
import type { ComponentProps } from 'svelte';
import { type Accessor } from '../utils/common.js';
export type AreaPropsWithoutHTML = {
    /** Override data instead of using context */
    data?: any;
    /**
     * Pass `<path d={...} />` explicitly instead of calculating from data / context
     */
    pathData?: string | null;
    /**
     * Override x accessor
     */
    x?: Accessor;
    /**
     * Override y0 accessor. Defaults to max($yRange)
     */
    y0?: Accessor;
    /**
     * Override y1 accessor. Defaults to y accessor
     */
    y1?: Accessor;
    /**
     * Whether to tween the interpolated path data using d3-interpolate-path
     */
    motion?: MotionProp;
    clipPath?: string;
    curve?: CurveFactory;
    defined?: Parameters<D3Area<any>['defined']>[0];
    /**
     * Enable showing line
     *
     * @default false
     */
    line?: boolean | Partial<ComponentProps<typeof Spline>>;
} & CommonStyleProps;
export type AreaProps = AreaPropsWithoutHTML & Without<SVGAttributes<SVGPathElement>, AreaPropsWithoutHTML>;
import type { CurveFactory } from 'd3-shape';
import Spline from './Spline.svelte';
import { type MotionProp } from '../utils/motion.svelte.js';
declare const Area: import("svelte").Component<AreaProps, {}, "">;
type Area = ReturnType<typeof Area>;
export default Area;
