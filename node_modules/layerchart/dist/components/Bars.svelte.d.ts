export type BarsPropsWithoutHTML = {
    /**
     * Override the data from the context.
     */
    data?: any;
    /**
     * Define unique value for {#each} `(key)` expressions
     * to improve transitions.
     *
     * @default (d, index) => index
     */
    key?: (d: any, index: number) => any;
    /**
     * Event dispatched when an individual bar is clicked.
     */
    onBarClick?: (e: MouseEvent, detail: {
        data: any;
    }) => void;
    children?: Snippet;
    [key: string]: any;
} & Omit<BarPropsWithoutHTML, 'data' | 'children'>;
export type BarsProps = BarsPropsWithoutHTML & Omit<BarProps, 'data'>;
import type { Snippet } from 'svelte';
import { type BarProps, type BarPropsWithoutHTML } from './Bar.svelte';
declare const Bars: import("svelte").Component<BarsProps, {}, "">;
type Bars = ReturnType<typeof Bars>;
export default Bars;
