import type { Without } from '../utils/types.js';
import type { Snippet } from 'svelte';
import type { SVGAttributes } from 'svelte/elements';
export type ClipPathPropsWithoutHTML = {
    /**
     * A unique id for the clipPath.
     *
     */
    id?: string;
    /**
     * Use existing path or shape (by id) for clipPath
     *
     */
    useId?: string;
    /**
     * Whether to disable clipping (show all).
     *
     * @default false
     */
    disabled?: boolean;
    /**
     * A snippet to insert content into the clipPath.
     * Provides the id for the clipPath as a snippet prop.
     */
    clip?: Snippet<[{
        id: string;
    }]>;
    /**
     * Children to render in the `<g>` element that links to the clipPath (if not disabled).
     * Provides the id, url, and useId for the clipPath as snippet props.
     */
    children?: Snippet<[{
        id: string;
        url: string;
        useId?: string;
    }]>;
};
export type ClipPathProps = ClipPathPropsWithoutHTML & Without<SVGAttributes<SVGClipPathElement>, ClipPathPropsWithoutHTML>;
declare const ClipPath: import("svelte").Component<ClipPathPropsWithoutHTML, {}, "">;
type ClipPath = ReturnType<typeof ClipPath>;
export default ClipPath;
