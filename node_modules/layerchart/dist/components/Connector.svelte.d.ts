export type ConnectorPropsWithoutHTML = {
    /**
     * The coordinates of the start point of the connector.
     * @default { x: 0, y: 0 }
     */
    source: ConnectorCoords;
    /**
     * The coordinates of the end point of the connector.
     *
     * @default { x: 100, y: 100 }
     */
    target: ConnectorCoords;
    /**
     * The sweep direction of the connector.
     *
     * @default 'horizontal-vertical'
     */
    sweep?: ConnectorSweep;
    /**
     * The type of the connector.
     *
     * Set to `'d3'` to use a D3 curve function via the `curve` prop.
     *
     * @default 'rounded'
     */
    type?: ConnectorType;
    /**
     * The radius of the connector.
     *
     * Only used when type is `'beveled'` or `'rounded'`
     *
     * @default 20
     */
    radius?: number;
    /**
     * The D3 curve function to use for the connector.
     *
     * Only used when type is `'d3'`
     *
     * @default `d3.curveLinear`
     */
    curve?: CurveFactory;
} & SplinePropsWithoutHTML;
export type ConnectorProps = ConnectorPropsWithoutHTML & Without<SplineProps, ConnectorPropsWithoutHTML>;
import { type CurveFactory } from 'd3-shape';
import { type ConnectorCoords, type ConnectorSweep, type ConnectorType } from '../utils/connectorUtils.js';
import { type SplineProps, type SplinePropsWithoutHTML } from './Spline.svelte';
import type { Without } from '../utils/types.js';
declare const Connector: import("svelte").Component<ConnectorProps, {}, "pathRef">;
type Connector = ReturnType<typeof Connector>;
export default Connector;
