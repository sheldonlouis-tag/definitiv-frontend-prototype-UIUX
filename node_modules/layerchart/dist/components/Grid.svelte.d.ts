import type { Transition, TransitionParams, Without } from '../utils/types.js';
import { type MotionProp } from '../utils/motion.svelte.js';
import type { SVGAttributes } from 'svelte/elements';
export type GridPropsWithoutHTML<In extends Transition = Transition> = {
    /**
     * Draw a x-axis lines
     *
     * @default false
     */
    x?: boolean | Pick<SVGAttributes<SVGElement>, 'class' | 'style'>;
    /**
     * Draw a y-axis lines
     *
     * @default false
     */
    y?: boolean | Pick<SVGAttributes<SVGElement>, 'class' | 'style'>;
    /**
     * Control the number of x-axis ticks
     */
    xTicks?: TicksConfig;
    /**
     * Control the number of y-axis ticks
     *
     * @default !isScaleBand(ctx.yScale) ? 4 : undefined
     */
    yTicks?: TicksConfig;
    /**
     * Line alignment when band scale is used (x or y axis)
     *
     * @default 'center'
     */
    bandAlign?: 'center' | 'between';
    /**
     * Render `y` lines with circles or linear splines
     *
     * @default 'circle'
     */
    radialY?: 'circle' | 'linear';
    /**
     * Classes to apply to the rendered elements.
     *
     * @default {}
     */
    classes?: {
        root?: string;
        line?: string;
    };
    /**
     * Transition function for entering elements
     * @default  defaults to fade if motion is tweened
     */
    transitionIn?: In;
    /**
     * Parameters for the transitionIn function
     * @default { easing: cubicIn }
     */
    transitionInParams?: TransitionParams<In>;
    /**
     * A reference to the underlying outermost `<g>` element.
     *
     * @bindable
     */
    ref?: SVGGElement;
    motion?: MotionProp;
};
export type GridProps<In extends Transition = Transition> = Omit<GridPropsWithoutHTML<In> & Without<GroupProps, GridPropsWithoutHTML<In>>, 'children'>;
import { type GroupProps } from './Group.svelte';
import { type TicksConfig } from '../utils/ticks.js';
declare const Grid: import("svelte").Component<GridProps<Transition>, {}, "ref">;
type Grid = ReturnType<typeof Grid>;
export default Grid;
