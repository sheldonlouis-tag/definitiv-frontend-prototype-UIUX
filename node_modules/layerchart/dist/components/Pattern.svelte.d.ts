import type { Snippet } from 'svelte';
import type { SVGAttributes } from 'svelte/elements';
import { type Without } from '../utils/types.js';
type PatternLineDef = {
    /**
     * The width of the line
     * @default 1
     */
    width?: string;
    /**
     * The rotation of the line
     * @default 0
     */
    rotate?: number;
    /**
     * The color of the line
     * @default 'var(--color-surface-content)'
     */
    color?: string;
    /**
     * The opacity of the line
     * @default 1
     */
    opacity?: number;
};
type PatternCircleDef = {
    /**
     * The radius of the circle
     * @default 1
     */
    radius?: number;
    /**
     * Stagger the circle layout
     * @default false
     */
    stagger?: boolean;
    /**
     * The color of the circle
     * @default 'var(--color-surface-content)'
     */
    color?: string;
    /**
     * The opacity of the circle
     * @default 1
     */
    opacity?: number;
};
export type PatternPropsWithoutHTML = {
    /**
     * The id of the pattern
     */
    id?: string;
    /**
     * The size of the pattern (sets `width` and `height` as same value).
     */
    size?: number;
    /**
     * The width of the pattern for custom patterns (set by `lines`, etc)
     */
    width?: number;
    /**
     * The height of the pattern for custom patterns (set by `lines`, etc)
     */
    height?: number;
    /**
     * The number of lines to render
     */
    lines?: boolean | PatternLineDef | PatternLineDef[];
    /**
     * The number of circles to render
     */
    circles?: boolean | PatternCircleDef | PatternCircleDef[];
    /**
     * The background color of the pattern
     */
    background?: string;
    /**
     * Render as a child of the pattern
     */
    patternContent?: Snippet;
    children?: Snippet<[{
        id: string;
        pattern: string;
    }]>;
};
export type PatternProps = PatternPropsWithoutHTML & Without<SVGAttributes<SVGPatternElement>, PatternPropsWithoutHTML>;
export type CircleShape = {
    type: 'circle';
    cx: number;
    cy: number;
    r: number;
    fill: string;
    opacity: number;
};
export type LineShape = {
    type: 'line';
    path: string;
    stroke: string;
    strokeWidth: string | number;
    opacity: number;
};
export type PatternShape = CircleShape | LineShape;
declare const Pattern: import("svelte").Component<PatternProps, {}, "">;
type Pattern = ReturnType<typeof Pattern>;
export default Pattern;
