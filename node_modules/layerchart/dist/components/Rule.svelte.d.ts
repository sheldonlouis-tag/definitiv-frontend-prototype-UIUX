import type { Without } from '../utils/types.js';
import type { SVGAttributes } from 'svelte/elements';
export type BaseRulePropsWithoutHTML = {
    /**
     * Create a vertical `x` line
     * - If true or 'left', will draw at chart left (xRange[0])
     * - If 'right', will draw at chart right (xRange[1])
     * - Use `0` for baseline (yScale(0))
     * - Use number | Date value for annotation (yScale(value))
     *
     * @default false
     */
    x?: number | Date | boolean | 'left' | 'right';
    /**
     * Pixel offset to apply to `x` coordinate
     *
     * @default 0
     */
    xOffset?: number;
    /**
     * Create a horizontal `y` line
     * - If true or 'bottom', will draw at chart bottom (yRange[0])
     * - If 'top', will draw at chart top (yRange[1])
     * - Use `0` for baseline (xScale(0))
     * - Use number | Date value for annotation (xScale(value))
     *
     * @default false
     */
    y?: number | Date | boolean | 'top' | 'bottom';
    /**
     * Pixel offset to apply to `y` coordinate
     * @default 0
     */
    yOffset?: number;
};
export type RulePropsWithoutHTML = BaseRulePropsWithoutHTML & Without<Partial<LinePropsWithoutHTML>, BaseRulePropsWithoutHTML>;
export type RuleProps = RulePropsWithoutHTML & Without<SVGAttributes<SVGElement>, RulePropsWithoutHTML>;
import { type LinePropsWithoutHTML } from './Line.svelte';
declare const Rule: import("svelte").Component<RuleProps, {}, "">;
type Rule = ReturnType<typeof Rule>;
export default Rule;
