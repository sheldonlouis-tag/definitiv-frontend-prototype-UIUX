import type { Placement } from './types.js';
type Actions = 'zoomIn' | 'zoomOut' | 'center' | 'reset' | 'scrollMode';
export type TransformControlsPropsWithoutHTML = {
    /**
     * @default 'top-right'
     */
    placement?: Placement;
    /**
     * @default 'vertical'
     */
    orientation?: 'horizontal' | 'vertical';
    /**
     * @default 'md'
     */
    size?: ComponentProps<Button>['size'];
    /**
     * @default ['zoomIn', 'zoomOut', 'center', 'reset', 'scrollMode']
     */
    show?: Actions[];
};
export type TransformControlsProps = TransformControlsPropsWithoutHTML & Without<HTMLAttributes<HTMLElement>, TransformControlsPropsWithoutHTML>;
import { type ComponentProps } from 'svelte';
import { Button } from 'svelte-ux';
import type { Without } from '../utils/types.js';
import type { HTMLAttributes } from 'svelte/elements';
declare const TransformControls: import("svelte").Component<TransformControlsProps, {}, "">;
type TransformControls = ReturnType<typeof TransformControls>;
export default TransformControls;
