import type { Without } from '../utils/types.js';
export type VoronoiPropsWithoutHTML = {
    /**
     * Override data instead of using context
     */
    data?: any;
    /** Radius to clip voronoi cells.  `0` or `undefined` to disables clipping */
    r?: number;
    /**
     * Classes to apply to the root and path elements
     *
     * @default = {}
     */
    classes?: {
        root?: string;
        path?: string;
    };
    onclick?: (e: MouseEvent, details: {
        data: any;
        point?: [number, number];
        feature?: GeoPermissibleObjects;
    }) => void;
    onpointerenter?: (e: PointerEvent, details: {
        data: any;
        point?: [number, number];
        feature?: GeoPermissibleObjects;
    }) => void;
    onpointermove?: (e: PointerEvent, details: {
        data: any;
        point?: [number, number];
        feature?: GeoPermissibleObjects;
    }) => void;
    onpointerdown?: (e: PointerEvent, details: {
        data: any;
        point?: [number, number];
        feature?: GeoPermissibleObjects;
    }) => void;
};
export type VoronoiProps = VoronoiPropsWithoutHTML & Without<Omit<GroupProps, 'children'>, VoronoiPropsWithoutHTML>;
import { type GeoPermissibleObjects } from 'd3-geo';
import { type GroupProps } from './Group.svelte';
declare const Voronoi: import("svelte").Component<VoronoiProps, {}, "">;
type Voronoi = ReturnType<typeof Voronoi>;
export default Voronoi;
