import { SelectionState } from '@layerstack/svelte-state';
import { scaleOrdinal } from 'd3-scale';
export class HighlightKey {
    current = $state(null);
    set = (seriesKey) => {
        this.current = seriesKey;
    };
}
export class SeriesState {
    #series = $state.raw([]);
    selectedSeries = new SelectionState();
    selectedKeys = new SelectionState();
    highlightKey = new HighlightKey();
    constructor(getSeries) {
        this.#series = getSeries();
        $effect.pre(() => {
            // keep series state in sync with the prop
            this.#series = getSeries();
        });
    }
    get series() {
        return this.#series;
    }
    get isDefaultSeries() {
        return this.#series.length === 1 && this.#series[0].key === 'default';
    }
    get allSeriesData() {
        return this.#series
            .flatMap((s) => s.data?.map((d) => ({ seriesKey: s.key, ...d })))
            .filter((d) => d);
    }
    get visibleSeries() {
        return this.#series.filter((s) => this.selectedSeries.isEmpty() || this.selectedSeries.isSelected(s.key));
    }
}
/**
 * A prop builder for the legend component shared between the simplified charts.
 */
export function createLegendProps(opts) {
    return {
        scale: opts.seriesState.isDefaultSeries
            ? undefined
            : scaleOrdinal(opts.seriesState.series.map((s) => s.key), opts.seriesState.series.map((s) => s.color)),
        tickFormat: (key) => opts.seriesState.series.find((s) => s.key === key)?.label ?? key,
        placement: 'bottom',
        variant: 'swatches',
        onclick: (_, item) => opts.seriesState.selectedSeries.toggle(item.value),
        onpointerenter: (_, item) => (opts.seriesState.highlightKey.current = item.value),
        onpointerleave: () => (opts.seriesState.highlightKey.current = null),
        ...opts.props,
        classes: {
            item: (item) => opts.seriesState.visibleSeries.length &&
                !opts.seriesState.visibleSeries.some((s) => s.key === item.value)
                ? 'opacity-50'
                : '',
            ...opts.props?.classes,
        },
    };
}
