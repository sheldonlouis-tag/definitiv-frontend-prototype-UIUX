/**
 * Reactive utilities to create and position text for Arc-based labels/annotations.
 *
 * TODO: we can probably simplify / pull some of these pieces out to not do a bunch
 * of extra work when we don't need to. But for now while we work on the API, this is fine :)
 */
import type { Getter, GetterValues } from './types.js';
import type { ComponentProps } from 'svelte';
import type { Text } from '../components/index.js';
export type ArcTextProps = GetterValues<{
    innerRadius: number;
    outerRadius: number;
    cornerRadius: number;
    startAngle: number;
    endAngle: number;
    centroid: [number, number];
}>;
export type InternalArcTextProps = ArcTextProps & {
    /**
     * Whether the corner radius should be inverted or not.
     * This changes when text is rotated/flipped to ensure
     * the corner offset is applied correctly.
     */
    invertCorner: Getter<boolean>;
};
export type ArcPathResult = {
    current: string;
};
export type ArcTextPosition = 'inner' | 'outer' | 'middle' | 'centroid' | 'outer-radial';
export type ArcTextOptions = {
    /**
     * A percentage string (e.g., '50%') to offset the start angle of the text path.
     * If a specific offset is needed, you should use option rather than passing it
     * directly to the `<Text>` component to ensure it is taken into account when
     * calculating the path the text should follow.
     *
     * This has no effect if the position is `'centroid'`.
     */
    startOffset?: string;
    /**
     * An amount of padding to add to the outer radius of the path to add space
     * between the text and the arc.
     */
    outerPadding?: number;
    /**
     * Optional offset specifically for 'outer-radial' position from the outer arc edge.
     * If not provided, 'outerPadding' will be used.
     *
     * // TODO: does 23 even make sense? It looks good but is it too arbitrary? needs sean's attention
     * Defaults to 23 if neither is set.
     */
    radialOffset?: number;
};
export declare function createArcTextProps(props: ArcTextProps, opts: ArcTextOptions | undefined, position: ArcTextPosition): {
    current: ComponentProps<typeof Text>;
};
export type GetArcTextProps = (position: ArcTextPosition, opts?: ArcTextOptions) => ComponentProps<typeof Text>;
