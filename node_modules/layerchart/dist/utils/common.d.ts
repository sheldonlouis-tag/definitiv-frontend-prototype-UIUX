import type { Component, ComponentProps } from 'svelte';
import type Chart from '../components/Chart.svelte';
import type { SimplifiedChartProps } from '../components/charts/types.js';
export type Accessor<TData = any> = number | string | ((d: TData) => any) | undefined | null | Accessor<TData>[];
export declare function accessor<TData = any>(prop: Accessor<TData>): (d: TData) => any;
/** Guarantee chart data is an array */
export declare function chartDataArray<TData = any>(data: ComponentProps<Chart<TData>>['data']): any[];
export declare function defaultChartPadding<TData, SeriesComponent extends Component, TSnippetProps>(axis?: SimplifiedChartProps<TData, SeriesComponent, TSnippetProps>['axis'], legend?: SimplifiedChartProps<TData, SeriesComponent, TSnippetProps>['legend']): {
    top: number;
    left: number;
    bottom: number;
    right: number;
} | undefined;
/**
 * Find the first instance within `data` with the same value as `original` using prop accessor.
 * Handles complex objects such as `Date` by invoking `.valueOf()`
 */
export declare function findRelatedData(data: any[], original: any, accessor: Function): any;
