import { get } from 'lodash-es';
export function accessor(prop) {
    if (Array.isArray(prop)) {
        return (d) => prop.map((p) => accessor(p)(d));
    }
    else if (typeof prop === 'function') {
        // function
        return prop;
    }
    else if (typeof prop === 'string' || typeof prop === 'number') {
        // path string or number (array index)
        return (d) => get(d, prop);
    }
    else {
        // return full object
        return (d) => d;
    }
}
/** Guarantee chart data is an array */
export function chartDataArray(data) {
    if (data == null) {
        return [];
    }
    else if (Array.isArray(data)) {
        return data;
    }
    else if ('nodes' in data) {
        return data.nodes;
    }
    else if ('descendants' in data) {
        return data.descendants();
    }
    return [];
}
export function defaultChartPadding(axis = true, legend = false) {
    if (axis === false) {
        return undefined;
    }
    else {
        return {
            top: axis === true || axis === 'y' ? 4 : 0,
            left: axis === true || axis === 'y' ? 20 : 0,
            bottom: (axis === true || axis === 'x' ? 20 : 0) + (legend === true ? 32 : 0),
            right: axis === true || axis === 'x' ? 4 : 0,
        };
    }
}
/**
 * Find the first instance within `data` with the same value as `original` using prop accessor.
 * Handles complex objects such as `Date` by invoking `.valueOf()`
 */
export function findRelatedData(data, original, accessor) {
    return data.find((d) => {
        return accessor(d)?.valueOf() === accessor(original)?.valueOf();
    });
}
