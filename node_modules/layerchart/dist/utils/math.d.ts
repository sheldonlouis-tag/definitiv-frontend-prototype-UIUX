/**
 * Convert degrees to radians
 */
export declare function degreesToRadians(degrees: number): number;
/**
 * Convert radians to degrees
 */
export declare function radiansToDegrees(radians: number): number;
/**
 * Convert polar to cartesian coordinate system.
 * see also: https://d3js.org/d3-shape/symbol#pointRadial
 * @param angle - Angle in radians
 * @param radius - Radius
 */
export declare function polarToCartesian(angle: number, radius: number): {
    x: number;
    y: number;
};
/**
 * Convert cartesian to polar coordinate system.  Angle in radians with 0 at the 12 o'clock position
 */
export declare function cartesianToPolar(x: number, y: number): {
    radius: number;
    radians: number;
};
/** Convert celsius temperature to fahrenheit */
export declare function celsiusToFahrenheit(temperature: number): number;
/** Convert fahrenheit temperature to celsius */
export declare function fahrenheitToCelsius(temperature: number): number;
/** Parse percent string (`50%`) to decimal (`0.5`) */
export declare function parsePercent(percent: string | number): number;
/** Add second value while maintaining `Date` or `number` type */
export declare function add(value1: Date | number, value2: number): number | Date;
