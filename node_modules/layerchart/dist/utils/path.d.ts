/**
 * Convert easing into path data with number of points
 * see: https://svelte.dev/examples#easing
 */
export declare function getEasingPath(easing: (t: number) => number, count?: number): string;
/** Create circle using path data.  Useful for labels.  See also d3-shape's arc */
export declare function circlePath(dimensions: {
    cx: number;
    cy: number;
    r: number;
    sweep?: 'inside' | 'outside';
}): string;
/** Create spike (triangle) using path data  */
export declare function spikePath({ x, y, width, height, }: {
    x: number;
    y: number;
    width: number;
    height: number;
}): string;
/** Create rounded polygon path
 *
 * @param coords - Array of points (x, y)
 * @param radius - Radius of the curve
 * @returns String of path data
 */
export declare function roundedPolygonPath(coords: {
    x: number;
    y: number;
}[], radius: number): string;
/** Flatten all `y` coordinates to `0` */
export declare function flattenPathData(pathData: string, yOverride?: number): string;
